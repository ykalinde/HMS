// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int   @id @default(autoincrement())
  firstname String?
  lastname  String?
  email     String   @unique
  password  String
  role      String
  age Int?
  gender String?
  createdAt DateTime @default(now())
  schedules Schedule[]
  visits Visit[] @relation("User")
  appointments Visit[] @relation("Doctor")
  speciality String?
}

model Schedule {
  id Int @id @default(autoincrement())
  all_day Boolean
  background String?
  start DateTime
  end DateTime
  user User @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
}

model Category {
  id Int @id @default(autoincrement())
  title String
  conditions Condition[]
}

model Symptom {
  id Int @id @default(autoincrement())
  name String
  visits SymptomsOnVisits[]
}

model Condition {
  id Int @id @default(autoincrement())
  severity String
  name String
  category Category @relation(fields: [category_id], references: [id])
  category_id Int
}

model Visit {
  id Int @id @default(autoincrement())
  condition String
  user User @relation(name: "User",fields: [user_id], references: [id], onDelete: Cascade)
  user_id Int
  visitedAt DateTime @default(now())
  visits SymptomsOnVisits[]
  vitals Vital[]
  doctor User @relation(name: "Doctor",fields: [doctorId], references: [id])
  doctorId Int
}

model SymptomsOnVisits {
  symptom Symptom @relation(fields: [symptom_id], references: [id])
  symptom_id Int
  visit Visit @relation(fields: [visit_id], references: [id])
  visit_id Int

  @@id([symptom_id, visit_id])
}

model Vital {
  id Int @id @default(autoincrement())
  weight Int
  height Int
  temperature Int
  bloodPressure Int
  visit Visit @relation(fields: [visitId], references: [id])
  visitId Int
}

model Speciality {
 id Int @id @default(autoincrement())
 name String
}